// exocar.cpp: реализация методов класса CCar.
//
//////////////////////////////////////////////////////////////////////
#include "exocar.h"

//////////////////////////////////////////////////////////////////////
// Конструктор и деструктор
//////////////////////////////////////////////////////////////////////

//CCar::CCar() :m_currSpeed(0), m_maxSpeed(0) {
CCar::CCar() {
  m_currSpeed = 0;
  m_maxSpeed = 0;
  strcpy(m_petName, "");
}

CCar::~CCar() {
  // Пока ничего не надо ...
}

//////////////////////////////////////////////////////////////////////
// Методы
//////////////////////////////////////////////////////////////////////

void CCar::DisplayCarStats() const { // Отобразить характеристики автомобиля.
  cout << "***********************************" << endl;
  cout << "Ваш автомобиль называется: " << m_petName << endl;
  cout << "Его максимальная скорость: " << m_maxSpeed << endl;
  cout << "***********************************" << endl << endl;
}

void CCar::CreateACar() { // Создать модель автомобиля
  char  buffer[ MAX_LENGTH << 2 ];
  int  spd = 0;
  // Ввести правильно имя автомобиля.
  do {
    cout << endl << "Пожалуйста введите имя автомобиля: " << flush;
    gets( buffer );   // Ввод строки.
  } while( strlen( buffer ) >= MAX_LENGTH );
  strcpy( m_petName, buffer );
  // Ввести правильно максимальную скорость.
  do  {
    cout << "Введите max скорость для данной модели: " << flush;
    cin >> spd;
    cout << endl;
  } while( spd > MAX_SPEED );
  m_maxSpeed = spd;
}

void CCar::AddSpeed() { // Нарастить скорость.
  if( m_currSpeed <= m_maxSpeed ){
    m_currSpeed += 10;
    cout << "Скорость есть: " << m_currSpeed << endl;
  }
}
